---
- name: Ensure existing client certs directory directory
  file:
    path: "{{ elk_certs_dir }}"
    state: directory

- name: Create {{ cert_name }} certificate private key
  openssl_privatekey:
    backup: yes
    # type: Ed25519
    path: "{{ elk_certs_dir }}/{{ cert_name }}-key.pem"

- name: Create pkcs8 version of {{ cert_name }} private key
  command:
    cmd: >
      openssl pkcs8
      -in "{{ elk_certs_dir }}/{{ cert_name }}-key.pem"
      -topk8
      -nocrypt
      -out "{{ elk_certs_dir }}/{{ cert_name }}-key.p8"

- name: Create {{ cert_name }} cert CSR
  openssl_csr:
    path: "{{ elk_certs_dir }}/{{ cert_name }}.csr"
    privatekey_path: "{{ elk_certs_dir }}/{{ cert_name }}-key.pem"
    basic_constraints:
      - "CA:FALSE"
    basic_constraints_critical: yes
    key_usage:
      - keyEncipherment
      - digitalSignature
    key_usage_critical: yes
    extended_key_usage:
      - serverAuth
      - clientAuth
    create_subject_key_identifier: yes
    common_name: "{{ cert_name }}"

- name: Create {{ cert_name }} certificate
  openssl_certificate:
    provider: ownca
    ownca_path: "{{ elk_ca_dir }}/ca.pem"
    ownca_privatekey_path: "{{ elk_ca_dir }}/ca-key.pem"
    path: "{{ elk_certs_dir }}/{{ cert_name }}.pem"
    privatekey_path: "{{ elk_certs_dir }}/{{ cert_name }}-key.pem"
    csr_path: "{{ elk_certs_dir }}/{{ cert_name }}.csr"
    backup: yes
    ownca_create_subject_key_identifier: always_create
